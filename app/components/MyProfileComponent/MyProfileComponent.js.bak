import React, { Component } from 'react';
import {
  AppRegistry,
  StyleSheet,
  Text,
  View,
  Image,
  AsyncStorage
} from 'react-native';

import CustomButtonComponent from '../CustomButtonComponent/CustomButtonComponent';
import CustomHeaderComponent from '../CustomHeaderComponent/CustomHeaderComponent';

import LoginComponent from '../LoginComponent/LoginComponent';

import firebase from 'firebase';


export default class MyProfileComponent extends Component{
  static navigationOptions = {
    tabBarLabel: 'MyProfile',
    tabBarIcon: ({tintColor}) => (
      <Image
        source = {require('../../icons/profile.png')}
        style = {[styles.icon, {tintColor: tintColor}]}
          />

        ),
    showIcon: true
    };

  constructor(props){
    super(props);

    console.log('MyProfileConstructor');

    this.state = {
      loaded: false
    }
  }

  loadUserData(){
    AsyncStorage.getItem('user_data')
      .then((user_data_json) => {
        let user_data = JSON.parse(user_data_json);
        //console.log(user_data);
        this.setState({
          user: user_data,
          loaded: true
        });

      });
  }

  componentWillMount(){
    console.log('------>Mount component');
    this.loadUserData();

  }

  logout(){
    console.log(AsyncStorage.getItem('user_data'));
    AsyncStorage.removeItem('user_data')
      .then(()=>{
        firebase.auth().signOut()
          .then(()=>{})
          .catch((error)=>{
            console.log(error);
          })
      .catch((error)=>{
        console.log(error);
      });

      });

      this.setState();
      this.props.navigation.navigate('Login');
  }

  listCars(){

  }

  render(){

    return (
      <View style={styles.container}>
        <View style={styles.body}>
          {
            this.state.user &&
            <View style={styles.body}>

              <Image
                style={styles.image}
                source={{uri: this.state.user.photoURL ? this.state.user.photoURL : 'https://cdn4.iconfinder.com/data/icons/SIGMA/networking/png/400/anonymous.png'}}
              />

              <View style={page_styles.email_container}>
                <Text style={page_styles.email_text}>{this.state.user.email}</Text>
              </View>

              <CustomButtonComponent
                text="List Cars"
                onPress={this.listCars.bind(this)}
                button_styles={styles.primary_button}
                button_text_styles={styles.primary_button_text} />


                <CustomButtonComponent
                  text="Logout"
                  onPress={this.logout.bind(this)}
                  button_styles={styles.primary_button}
                  button_text_styles={styles.primary_button_text} />


            </View>
          }
        </View>
      </View>
    );
  }
}

const styles = StyleSheet.create({
  body: {
    flexDirection: 'column',
    alignItems: 'center',
    backgroundColor: '#F5FCFF'
  },

  textinput: {
    height: 40,
    borderColor: 'red',
    borderWidth: 1
  },

  icon: {
    width: 24,
    height: 24,
  },

  transparent_button: {
    marginTop: 10,
    padding: 15
  },

  transparent_button_text: {
    color: '#0485A9',
    fontSize: 16
  },

  primary_button: {
    margin: 10,
    padding: 15,
    backgroundColor: '#529ecc'
  },

  primary_button_text: {
    color: '#FFF',
    fontSize: 18
  },

  image: {
    width: 100,
    height: 100,
    margin: 10
  }
})

const page_styles = StyleSheet.create({
  email_container:{
    padding: 20
  },

  email_text:{
    fontSize: 18
  },

  container: {
    flex: 1,
  }
})

AppRegistry.registerComponent('MyProfileComponent', () => MyProfileComponent);
